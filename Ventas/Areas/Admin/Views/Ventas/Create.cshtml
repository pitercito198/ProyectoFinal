@model Ventas.Models.Venta
@{
    ViewData["Title"] = "Crear Venta";
}

<h1>Crear Venta</h1>

<form asp-action="Create" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="Fecha" class="control-label"></label>
                <input asp-for="Fecha" class="form-control" />
                <span asp-validation-for="Fecha" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ClienteId" class="control-label">Cliente</label>
                <select asp-for="ClienteId" class="form-control" asp-items="@(ViewData["ClienteId"] as SelectList)"></select>
                <span asp-validation-for="ClienteId" class="text-danger"></span>
            </div>
        </div>
    </div>

    <div id="detallesContainer">
        <h2>Detalles de la Venta</h2>
        <div class="detalleVenta">
            <div class="form-group">
                <label>Producto</label>
                <select name="productoIds" class="form-control productoSelect" asp-items="@(ViewData["ProductoId"] as SelectList)">
                    <option value="" disabled selected>Seleccione un producto</option>
                </select>
            </div>
            <div class="form-group">
                <label>Cantidad</label>
                <input type="number" name="cantidades" class="form-control cantidadInput" value="1" min="1" />
            </div>
            <div class="form-group">
                <label>Precio Unitario</label>
                <input type="text" class="form-control precioUnitarioInput" readonly /> @* Cambio a type="text" *@
            </div>
            <div class="form-group">
                <label>Subtotal</label>
                <input type="text" class="form-control subtotalInput" readonly /> @* Cambio a type="text" *@
            </div>
            <button type="button" class="btn btn-danger btn-sm quitarDetalle">Quitar</button>
        </div>
    </div>
    <button type="button" id="agregarDetalle" class="btn btn-primary">Agregar Producto</button>

    <div class="form-group">
        <label asp-for="Total" class="control-label"></label>
        <input asp-for="Total" class="form-control" readonly />
        <span asp-validation-for="Total" class="text-danger"></span>
    </div>

    <div class="form-group">
        <input type="submit" value="Guardar" class="btn btn-primary" />
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            // Función para actualizar el subtotal
            function actualizarSubtotal(detalle) {
                var cantidad = parseInt(detalle.find(".cantidadInput").val()) || 0;
                var precioUnitario = parseFloat(detalle.find(".precioUnitarioInput").val()) || 0;
                var subtotal = cantidad * precioUnitario;
                detalle.find(".subtotalInput").val(isNaN(subtotal) ? 0 : subtotal.toFixed(2));
                actualizarTotal();
            }

            // Función para actualizar el total
            function actualizarTotal() {
                var total = 0;
                $(".subtotalInput").each(function () {
                    total += parseFloat($(this).val()) || 0;
                });
                $("#Total").val(total.toFixed(2));
            }

                    $(document).on("change", ".productoSelect", function () {
            var selectedProductId = $(this).val();
            var detalle = $(this).closest(".detalleVenta");
            var precioUnitarioInput = detalle.find(".precioUnitarioInput");
            var subtotalInput = detalle.find(".subtotalInput");

            if (selectedProductId) {
                $.get('@Url.Action("ObtenerPrecio", "Productoes", new { area = "Admin" })/' + selectedProductId)
                    .done(function (data) {
                        console.log("Respuesta del servidor:", data); // Imprime la respuesta en la consola
                        precioUnitarioInput.val(data); // Asigna el valor directamente
                        actualizarSubtotal(detalle);
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        console.error("Error al obtener el precio:", textStatus, errorThrown, jqXHR.responseText);
                        alert("Error al obtener el precio del producto. Por favor, inténtelo de nuevo.");
                        precioUnitarioInput.val("");
                        subtotalInput.val("");
                        actualizarSubtotal(detalle);
                    });
            } else {
                precioUnitarioInput.val("");
                subtotalInput.val("");
                actualizarSubtotal(detalle);
            }
        });

            // Evento input para la cantidad (DELEGADO)
            $(document).on("input", ".cantidadInput", function () {
                var detalle = $(this).closest(".detalleVenta");
                actualizarSubtotal(detalle);
            });

            // Evento click para agregar detalles
            $("#agregarDetalle").click(function () {
                var nuevoDetalle = $(".detalleVenta:first").clone();
                nuevoDetalle.find("input").val("1");
                nuevoDetalle.find(".precioUnitarioInput").val("");
                nuevoDetalle.find(".subtotalInput").val("");
                nuevoDetalle.find(".productoSelect").val("");
                $("#detallesContainer").append(nuevoDetalle);
            });

            // Evento click para quitar detalles (DELEGADO)
            $(document).on("click", ".quitarDetalle", function () {
                if ($(".detalleVenta").length > 1) {
                    $(this).closest(".detalleVenta").remove();
                    actualizarTotal();
                } else {
                    alert("Debe haber al menos un detalle de venta.");
                }
            });

        });
            $.get('@Url.Action("ObtenerPrecio", "Productos", new { area = "Admin" })/' + selectedProductId)
        .done(function (data) {
            precioUnitarioInput.val(data);
            actualizarSubtotal(detalle);
        })
        .fail(function (error) {
            console.error("Error al obtener el precio:", error);
            alert("Error al obtener el precio del producto. Por favor, inténtelo de nuevo.");
            precioUnitarioInput.val("");
            subtotalInput.val("");
            actualizarSubtotal(detalle);
        });
    </script>
}